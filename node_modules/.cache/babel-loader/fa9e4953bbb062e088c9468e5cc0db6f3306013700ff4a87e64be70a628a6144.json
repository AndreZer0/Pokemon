{"ast":null,"code":"var _jsxFileName = \"/Users/andreamanna/Desktop/Pokemon/fe/src/components/pages/Homepage.jsx\",\n  _s = $RefreshSig$();\n/** @format */\n\n// /** @format */\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { FaSpinner } from 'react-icons/fa'; // Importa lo spinner da react-icons\n// import ConfettiComponent from '../Confetti'; // Importa il componente Confetti\n// import './homepage.scss';\n\n// const Homepage = () => {\n//   const URL = 'https://pokeapi.co/api/v2/pokemon/';\n\n//   const [pokemonData, setPokemonData] = useState([]);\n//   const [buttonClicked, setButtonClicked] = useState(false);\n//   const [dialogText, setDialogText] = useState('Caricamento in corso...'); // Testo predefinito per il dialogo\n//   const [showCongratulations, setShowCongratulations] = useState(false);\n//   const [confetti, setConfetti] = useState(false);\n//   const [loading, setLoading] = useState(false); // Aggiungi stato per il caricamento\n\n//   const intervalRef = useRef(null);\n\n//   useEffect(() => {\n//     const initialPokemonData = Array.from({ length: 6 }).fill(null);\n//     setPokemonData(initialPokemonData);\n\n//     intervalRef.current = animateText();\n\n//     return () => clearInterval(intervalRef.current);\n//   }, []);\n\n//   const getRandomPokemon = async () => {\n//     setLoading(true); // Attiva l'indicatore di caricamento\n//     setDialogText('Cattura in corso...'); // Cambia il testo del dialogo durante il caricamento\n\n//     const randomPokemonData = [];\n//     const existingPokemonIds = new Set();\n\n//     while (randomPokemonData.length < 6) {\n//       const id = Math.floor(Math.random() * 150) + 1;\n\n//       if (!existingPokemonIds.has(id)) {\n//         existingPokemonIds.add(id);\n\n//         const finalUrl = URL + id;\n\n//         try {\n//           const response = await fetch(finalUrl);\n//           const data = await response.json();\n//           randomPokemonData.push(data);\n//         } catch (error) {\n//           console.error('Errore nella richiesta API:', error);\n//         }\n//       }\n//     }\n\n//     setPokemonData(randomPokemonData);\n//     setButtonClicked(true);\n//     setShowCongratulations(true);\n//     setDialogText(''); // Ripristina il testo del dialogo dopo il caricamento completato\n//     clearInterval(intervalRef.current);\n//     intervalRef.current = animateCongratulations();\n\n//     setConfetti(true); // Attiva l'effetto di coriandoli\n\n//     setTimeout(() => {\n//       setConfetti(false);\n//     }, 6000);\n\n//     setLoading(false); // Disattiva l'indicatore di caricamento\n//   };\n\n//   const generateCard = (data, index) => {\n//     if (!data) {\n//       return (\n//         <div\n//           key={index}\n//           className='card-circle'>\n//           <div className='pokemon-info'></div>\n//         </div>\n//       );\n//     }\n\n//     const imgSrc = data.sprites.other.dream_world.front_default;\n//     const pokeName = data.name[0].toUpperCase() + data.name.slice(1);\n\n//     return (\n//       <div\n//         key={index}\n//         className='card-circle'>\n//         <div className='pokemon-info'>\n//           <img\n//             src={imgSrc}\n//             alt={pokeName}\n//           />\n//           <p>{pokeName}</p>\n//         </div>\n//       </div>\n//     );\n//   };\n\n//   const animateText = () => {\n//     let i = 0;\n//     const pokemonDialog =\n//       'Ciao, giovane Allenatore! Benvenuto nel meraviglioso mondo dei Pokémon! Sono il Professor Oak, il tuo mentore in questa straordinaria avventura. Prima di iniziare, ricorda che ci sono Pokémon da scoprire, sfide da affrontare e amicizie da stringere. Scegli la squadra con la quale affronterai questo viaggio, clicca sulla Pokèball!';\n//     setDialogText(pokemonDialog[0]);\n//     const interval = setInterval(() => {\n//       setDialogText(prevText => prevText + pokemonDialog[i]);\n//       i++;\n\n//       if (i === pokemonDialog.length) {\n//         clearInterval(interval);\n//         setDialogText(pokemonDialog);\n//       }\n//     }, 50);\n\n//     return interval;\n//   };\n\n//   const animateCongratulations = () => {\n//     const congratulationsText =\n//       'Congratulazioni! Questi sono i tuoi compagni per la grande avventura che ti attende! Si parte!';\n//     setDialogText('');\n//     let i = 0;\n//     setDialogText(congratulationsText[0]);\n//     const interval = setInterval(() => {\n//       setDialogText(prevText => prevText + congratulationsText[i]);\n//       i++;\n\n//       if (i === congratulationsText.length) {\n//         clearInterval(interval);\n//         setDialogText(congratulationsText);\n//       }\n//     }, 50);\n\n//     return interval;\n//   };\n\n//   return (\n//     <>\n//       <div className='sfondo'>\n//         {confetti && <ConfettiComponent />}{' '}\n//         {/* Mostra Confetti se confetti è true */}\n//         <div className='container'>\n//           <div className='team'>\n//             {loading ? (\n//               <div className='loading-container'>\n//                 <FaSpinner className='spinner-icon' />\n//               </div>\n//             ) : (\n//               pokemonData.map((pokemon, index) => generateCard(pokemon, index))\n//             )}\n\n//             {!loading && !buttonClicked && (\n//               <div className='bottone'>\n//                 <button\n//                   className='pokeball'\n//                   onClick={getRandomPokemon}\n//                   style={{ visibility: buttonClicked ? 'hidden' : 'visible' }} // Nasconde il bottone se è stato cliccato\n//                 ></button>\n//               </div>\n//             )}\n//           </div>\n//           <div className='professore'>\n//             <img\n//               src='https://media.pokemoncentral.it/wiki/e/ed/Masters_Professor_Oak.png'\n//               alt=''\n//             />\n//             <div className='dialogo'>\n//               <span className='professor-intro'>{dialogText}</span>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Homepage;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FaSpinner } from 'react-icons/fa'; // Importa lo spinner da react-icons\nimport ConfettiComponent from '../Confetti'; // Importa il componente Confetti\nimport './homepage.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Homepage = () => {\n  _s();\n  const URL = 'https://pokeapi.co/api/v2/pokemon/';\n  const [pokemonData, setPokemonData] = useState([]);\n  const [buttonClicked, setButtonClicked] = useState(false);\n  const [dialogText, setDialogText] = useState(''); // Testo predefinito per il dialogo\n  const [showCongratulations, setShowCongratulations] = useState(false);\n  const [confetti, setConfetti] = useState(false);\n  const [loading, setLoading] = useState(false); // Aggiungi stato per il caricamento\n\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    const initialPokemonData = Array.from({\n      length: 6\n    }).fill(null);\n    setPokemonData(initialPokemonData);\n    intervalRef.current = animateText();\n    return () => clearInterval(intervalRef.current);\n  }, []);\n\n  // const getRandomPokemon = async () => {\n  //   setLoading(true); // Attiva l'indicatore di caricamento\n\n  //   // Imposta un ritardo prima di cambiare il testo del dialogo\n  //   setTimeout(() => {\n  //     setDialogText('Cattura in corso...'); // Cambia il testo del dialogo durante il caricamento\n  //   }, 500); // 500 millisecondi di ritardo\n\n  //   const randomPokemonData = [];\n  //   const existingPokemonIds = new Set();\n\n  //   while (randomPokemonData.length < 6) {\n  //     const id = Math.floor(Math.random() * 150) + 1;\n\n  //     if (!existingPokemonIds.has(id)) {\n  //       existingPokemonIds.add(id);\n\n  //       const finalUrl = URL + id;\n\n  //       try {\n  //         const response = await fetch(finalUrl);\n  //         const data = await response.json();\n  //         randomPokemonData.push(data);\n  //       } catch (error) {\n  //         console.error('Errore nella richiesta API:', error);\n  //       }\n  //     }\n  //   }\n\n  //   setPokemonData(randomPokemonData);\n  //   setButtonClicked(true);\n  //   setShowCongratulations(true);\n  //   setDialogText(''); // Ripristina il testo del dialogo dopo il caricamento completato\n  //   clearInterval(intervalRef.current);\n  //   intervalRef.current = animateCongratulations();\n\n  //   setConfetti(true); // Attiva l'effetto di coriandoli\n\n  //   setTimeout(() => {\n  //     setConfetti(false);\n  //   }, 6000);\n\n  //   setLoading(false); // Disattiva l'indicatore di caricamento\n  // };\n  const getRandomPokemon = async () => {\n    setLoading(true); // Attiva l'indicatore di caricamento\n    setDialogText('Cattura in corso...'); // Imposta il testo del dialogo solo durante il caricamento\n    const interval = setInterval(() => {\n      setDialogText(prevText => prevText + pokemonDialog[i]);\n      i++;\n    });\n    const randomPokemonData = [];\n    const existingPokemonIds = new Set();\n    while (randomPokemonData.length < 6) {\n      const id = Math.floor(Math.random() * 150) + 1;\n      if (!existingPokemonIds.has(id)) {\n        existingPokemonIds.add(id);\n        const finalUrl = URL + id;\n        try {\n          const response = await fetch(finalUrl);\n          const data = await response.json();\n          randomPokemonData.push(data);\n        } catch (error) {\n          console.error('Errore nella richiesta API:', error);\n        }\n      }\n    }\n    setPokemonData(randomPokemonData);\n    setButtonClicked(true);\n    setShowCongratulations(true);\n    clearInterval(intervalRef.current);\n    intervalRef.current = animateCongratulations();\n    setConfetti(true); // Attiva l'effetto di coriandoli\n\n    setTimeout(() => {\n      setConfetti(false);\n    }, 6000);\n    setLoading(false); // Disattiva l'indicatore di caricamento\n  };\n  const generateCard = (data, index) => {\n    if (!data) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-circle\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemon-info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this);\n    }\n    const imgSrc = data.sprites.other.dream_world.front_default;\n    const pokeName = data.name[0].toUpperCase() + data.name.slice(1);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-circle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgSrc,\n          alt: pokeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pokeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this);\n  };\n  const animateText = () => {\n    let i = 0;\n    const pokemonDialog = 'Ciao, giovane Allenatore! Benvenuto nel meraviglioso mondo dei Pokémon! Sono il Professor Oak, il tuo mentore in questa straordinaria avventura. Prima di iniziare, ricorda che ci sono Pokémon da scoprire, sfide da affrontare e amicizie da stringere. Scegli la squadra con la quale affronterai questo viaggio, clicca sulla Pokèball!';\n    setDialogText(pokemonDialog[0]);\n    const interval = setInterval(() => {\n      setDialogText(prevText => prevText + pokemonDialog[i]);\n      i++;\n      if (i === pokemonDialog.length) {\n        clearInterval(interval);\n        setDialogText(pokemonDialog);\n      }\n    }, 50);\n    return interval;\n  };\n  const animateCongratulations = () => {\n    const congratulationsText = 'Congratulazioni! Questi sono i tuoi compagni per la grande avventura che ti attende! Si parte!';\n    setDialogText('');\n    let i = 0;\n    setDialogText(congratulationsText[0]);\n    const interval = setInterval(() => {\n      setDialogText(prevText => prevText + congratulationsText[i]);\n      i++;\n      if (i === congratulationsText.length) {\n        clearInterval(interval);\n        setDialogText(congratulationsText);\n      }\n    }, 50);\n    return interval;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sfondo\",\n      children: [confetti && /*#__PURE__*/_jsxDEV(ConfettiComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 22\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team\",\n          children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-container\",\n            children: /*#__PURE__*/_jsxDEV(FaSpinner, {\n              className: \"spinner-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this) : pokemonData.map((pokemon, index) => generateCard(pokemon, index)), !loading && !buttonClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottone\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"pokeball\",\n              onClick: getRandomPokemon,\n              style: {\n                visibility: buttonClicked ? 'hidden' : 'visible'\n              } // Nasconde il bottone se è stato cliccato\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"professore\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.pokemoncentral.it/wiki/e/ed/Masters_Professor_Oak.png\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dialogo\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"professor-intro\",\n              children: dialogText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Homepage, \"x0c5GpXz/Lx2aHJS1D83hePFV+o=\");\n_c = Homepage;\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FaSpinner","ConfettiComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","Homepage","_s","URL","pokemonData","setPokemonData","buttonClicked","setButtonClicked","dialogText","setDialogText","showCongratulations","setShowCongratulations","confetti","setConfetti","loading","setLoading","intervalRef","initialPokemonData","Array","from","length","fill","current","animateText","clearInterval","getRandomPokemon","interval","setInterval","prevText","pokemonDialog","i","randomPokemonData","existingPokemonIds","Set","id","Math","floor","random","has","add","finalUrl","response","fetch","data","json","push","error","console","animateCongratulations","setTimeout","generateCard","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","imgSrc","sprites","other","dream_world","front_default","pokeName","name","toUpperCase","slice","src","alt","congratulationsText","map","pokemon","onClick","style","visibility","_c","$RefreshReg$"],"sources":["/Users/andreamanna/Desktop/Pokemon/fe/src/components/pages/Homepage.jsx"],"sourcesContent":["/** @format */\n\n// /** @format */\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { FaSpinner } from 'react-icons/fa'; // Importa lo spinner da react-icons\n// import ConfettiComponent from '../Confetti'; // Importa il componente Confetti\n// import './homepage.scss';\n\n// const Homepage = () => {\n//   const URL = 'https://pokeapi.co/api/v2/pokemon/';\n\n//   const [pokemonData, setPokemonData] = useState([]);\n//   const [buttonClicked, setButtonClicked] = useState(false);\n//   const [dialogText, setDialogText] = useState('Caricamento in corso...'); // Testo predefinito per il dialogo\n//   const [showCongratulations, setShowCongratulations] = useState(false);\n//   const [confetti, setConfetti] = useState(false);\n//   const [loading, setLoading] = useState(false); // Aggiungi stato per il caricamento\n\n//   const intervalRef = useRef(null);\n\n//   useEffect(() => {\n//     const initialPokemonData = Array.from({ length: 6 }).fill(null);\n//     setPokemonData(initialPokemonData);\n\n//     intervalRef.current = animateText();\n\n//     return () => clearInterval(intervalRef.current);\n//   }, []);\n\n//   const getRandomPokemon = async () => {\n//     setLoading(true); // Attiva l'indicatore di caricamento\n//     setDialogText('Cattura in corso...'); // Cambia il testo del dialogo durante il caricamento\n\n//     const randomPokemonData = [];\n//     const existingPokemonIds = new Set();\n\n//     while (randomPokemonData.length < 6) {\n//       const id = Math.floor(Math.random() * 150) + 1;\n\n//       if (!existingPokemonIds.has(id)) {\n//         existingPokemonIds.add(id);\n\n//         const finalUrl = URL + id;\n\n//         try {\n//           const response = await fetch(finalUrl);\n//           const data = await response.json();\n//           randomPokemonData.push(data);\n//         } catch (error) {\n//           console.error('Errore nella richiesta API:', error);\n//         }\n//       }\n//     }\n\n//     setPokemonData(randomPokemonData);\n//     setButtonClicked(true);\n//     setShowCongratulations(true);\n//     setDialogText(''); // Ripristina il testo del dialogo dopo il caricamento completato\n//     clearInterval(intervalRef.current);\n//     intervalRef.current = animateCongratulations();\n\n//     setConfetti(true); // Attiva l'effetto di coriandoli\n\n//     setTimeout(() => {\n//       setConfetti(false);\n//     }, 6000);\n\n//     setLoading(false); // Disattiva l'indicatore di caricamento\n//   };\n\n//   const generateCard = (data, index) => {\n//     if (!data) {\n//       return (\n//         <div\n//           key={index}\n//           className='card-circle'>\n//           <div className='pokemon-info'></div>\n//         </div>\n//       );\n//     }\n\n//     const imgSrc = data.sprites.other.dream_world.front_default;\n//     const pokeName = data.name[0].toUpperCase() + data.name.slice(1);\n\n//     return (\n//       <div\n//         key={index}\n//         className='card-circle'>\n//         <div className='pokemon-info'>\n//           <img\n//             src={imgSrc}\n//             alt={pokeName}\n//           />\n//           <p>{pokeName}</p>\n//         </div>\n//       </div>\n//     );\n//   };\n\n//   const animateText = () => {\n//     let i = 0;\n//     const pokemonDialog =\n//       'Ciao, giovane Allenatore! Benvenuto nel meraviglioso mondo dei Pokémon! Sono il Professor Oak, il tuo mentore in questa straordinaria avventura. Prima di iniziare, ricorda che ci sono Pokémon da scoprire, sfide da affrontare e amicizie da stringere. Scegli la squadra con la quale affronterai questo viaggio, clicca sulla Pokèball!';\n//     setDialogText(pokemonDialog[0]);\n//     const interval = setInterval(() => {\n//       setDialogText(prevText => prevText + pokemonDialog[i]);\n//       i++;\n\n//       if (i === pokemonDialog.length) {\n//         clearInterval(interval);\n//         setDialogText(pokemonDialog);\n//       }\n//     }, 50);\n\n//     return interval;\n//   };\n\n//   const animateCongratulations = () => {\n//     const congratulationsText =\n//       'Congratulazioni! Questi sono i tuoi compagni per la grande avventura che ti attende! Si parte!';\n//     setDialogText('');\n//     let i = 0;\n//     setDialogText(congratulationsText[0]);\n//     const interval = setInterval(() => {\n//       setDialogText(prevText => prevText + congratulationsText[i]);\n//       i++;\n\n//       if (i === congratulationsText.length) {\n//         clearInterval(interval);\n//         setDialogText(congratulationsText);\n//       }\n//     }, 50);\n\n//     return interval;\n//   };\n\n//   return (\n//     <>\n//       <div className='sfondo'>\n//         {confetti && <ConfettiComponent />}{' '}\n//         {/* Mostra Confetti se confetti è true */}\n//         <div className='container'>\n//           <div className='team'>\n//             {loading ? (\n//               <div className='loading-container'>\n//                 <FaSpinner className='spinner-icon' />\n//               </div>\n//             ) : (\n//               pokemonData.map((pokemon, index) => generateCard(pokemon, index))\n//             )}\n\n//             {!loading && !buttonClicked && (\n//               <div className='bottone'>\n//                 <button\n//                   className='pokeball'\n//                   onClick={getRandomPokemon}\n//                   style={{ visibility: buttonClicked ? 'hidden' : 'visible' }} // Nasconde il bottone se è stato cliccato\n//                 ></button>\n//               </div>\n//             )}\n//           </div>\n//           <div className='professore'>\n//             <img\n//               src='https://media.pokemoncentral.it/wiki/e/ed/Masters_Professor_Oak.png'\n//               alt=''\n//             />\n//             <div className='dialogo'>\n//               <span className='professor-intro'>{dialogText}</span>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Homepage;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FaSpinner } from 'react-icons/fa'; // Importa lo spinner da react-icons\nimport ConfettiComponent from '../Confetti'; // Importa il componente Confetti\nimport './homepage.scss';\n\nconst Homepage = () => {\n  const URL = 'https://pokeapi.co/api/v2/pokemon/';\n\n  const [pokemonData, setPokemonData] = useState([]);\n  const [buttonClicked, setButtonClicked] = useState(false);\n  const [dialogText, setDialogText] = useState(''); // Testo predefinito per il dialogo\n  const [showCongratulations, setShowCongratulations] = useState(false);\n  const [confetti, setConfetti] = useState(false);\n  const [loading, setLoading] = useState(false); // Aggiungi stato per il caricamento\n\n  const intervalRef = useRef(null);\n\n  useEffect(() => {\n    const initialPokemonData = Array.from({ length: 6 }).fill(null);\n    setPokemonData(initialPokemonData);\n\n    intervalRef.current = animateText();\n\n    return () => clearInterval(intervalRef.current);\n  }, []);\n\n  // const getRandomPokemon = async () => {\n  //   setLoading(true); // Attiva l'indicatore di caricamento\n\n  //   // Imposta un ritardo prima di cambiare il testo del dialogo\n  //   setTimeout(() => {\n  //     setDialogText('Cattura in corso...'); // Cambia il testo del dialogo durante il caricamento\n  //   }, 500); // 500 millisecondi di ritardo\n\n  //   const randomPokemonData = [];\n  //   const existingPokemonIds = new Set();\n\n  //   while (randomPokemonData.length < 6) {\n  //     const id = Math.floor(Math.random() * 150) + 1;\n\n  //     if (!existingPokemonIds.has(id)) {\n  //       existingPokemonIds.add(id);\n\n  //       const finalUrl = URL + id;\n\n  //       try {\n  //         const response = await fetch(finalUrl);\n  //         const data = await response.json();\n  //         randomPokemonData.push(data);\n  //       } catch (error) {\n  //         console.error('Errore nella richiesta API:', error);\n  //       }\n  //     }\n  //   }\n\n  //   setPokemonData(randomPokemonData);\n  //   setButtonClicked(true);\n  //   setShowCongratulations(true);\n  //   setDialogText(''); // Ripristina il testo del dialogo dopo il caricamento completato\n  //   clearInterval(intervalRef.current);\n  //   intervalRef.current = animateCongratulations();\n\n  //   setConfetti(true); // Attiva l'effetto di coriandoli\n\n  //   setTimeout(() => {\n  //     setConfetti(false);\n  //   }, 6000);\n\n  //   setLoading(false); // Disattiva l'indicatore di caricamento\n  // };\n  const getRandomPokemon = async () => {\n    setLoading(true); // Attiva l'indicatore di caricamento\n    setDialogText('Cattura in corso...'); // Imposta il testo del dialogo solo durante il caricamento\n    const interval = setInterval(() => {\n      setDialogText(prevText => prevText + pokemonDialog[i]);\n      i++;\n    });\n    const randomPokemonData = [];\n    const existingPokemonIds = new Set();\n\n    while (randomPokemonData.length < 6) {\n      const id = Math.floor(Math.random() * 150) + 1;\n\n      if (!existingPokemonIds.has(id)) {\n        existingPokemonIds.add(id);\n\n        const finalUrl = URL + id;\n\n        try {\n          const response = await fetch(finalUrl);\n          const data = await response.json();\n          randomPokemonData.push(data);\n        } catch (error) {\n          console.error('Errore nella richiesta API:', error);\n        }\n      }\n    }\n\n    setPokemonData(randomPokemonData);\n    setButtonClicked(true);\n    setShowCongratulations(true);\n    clearInterval(intervalRef.current);\n    intervalRef.current = animateCongratulations();\n\n    setConfetti(true); // Attiva l'effetto di coriandoli\n\n    setTimeout(() => {\n      setConfetti(false);\n    }, 6000);\n\n    setLoading(false); // Disattiva l'indicatore di caricamento\n  };\n\n  const generateCard = (data, index) => {\n    if (!data) {\n      return (\n        <div\n          key={index}\n          className='card-circle'>\n          <div className='pokemon-info'></div>\n        </div>\n      );\n    }\n\n    const imgSrc = data.sprites.other.dream_world.front_default;\n    const pokeName = data.name[0].toUpperCase() + data.name.slice(1);\n\n    return (\n      <div\n        key={index}\n        className='card-circle'>\n        <div className='pokemon-info'>\n          <img\n            src={imgSrc}\n            alt={pokeName}\n          />\n          <p>{pokeName}</p>\n        </div>\n      </div>\n    );\n  };\n\n  const animateText = () => {\n    let i = 0;\n    const pokemonDialog =\n      'Ciao, giovane Allenatore! Benvenuto nel meraviglioso mondo dei Pokémon! Sono il Professor Oak, il tuo mentore in questa straordinaria avventura. Prima di iniziare, ricorda che ci sono Pokémon da scoprire, sfide da affrontare e amicizie da stringere. Scegli la squadra con la quale affronterai questo viaggio, clicca sulla Pokèball!';\n    setDialogText(pokemonDialog[0]);\n    const interval = setInterval(() => {\n      setDialogText(prevText => prevText + pokemonDialog[i]);\n      i++;\n\n      if (i === pokemonDialog.length) {\n        clearInterval(interval);\n        setDialogText(pokemonDialog);\n      }\n    }, 50);\n\n    return interval;\n  };\n\n  const animateCongratulations = () => {\n    const congratulationsText =\n      'Congratulazioni! Questi sono i tuoi compagni per la grande avventura che ti attende! Si parte!';\n    setDialogText('');\n    let i = 0;\n    setDialogText(congratulationsText[0]);\n    const interval = setInterval(() => {\n      setDialogText(prevText => prevText + congratulationsText[i]);\n      i++;\n\n      if (i === congratulationsText.length) {\n        clearInterval(interval);\n        setDialogText(congratulationsText);\n      }\n    }, 50);\n\n    return interval;\n  };\n\n  return (\n    <>\n      <div className='sfondo'>\n        {confetti && <ConfettiComponent />}{' '}\n        {/* Mostra Confetti se confetti è true */}\n        <div className='container'>\n          <div className='team'>\n            {loading ? (\n              <div className='loading-container'>\n                <FaSpinner className='spinner-icon' />\n              </div>\n            ) : (\n              pokemonData.map((pokemon, index) => generateCard(pokemon, index))\n            )}\n\n            {!loading && !buttonClicked && (\n              <div className='bottone'>\n                <button\n                  className='pokeball'\n                  onClick={getRandomPokemon}\n                  style={{ visibility: buttonClicked ? 'hidden' : 'visible' }} // Nasconde il bottone se è stato cliccato\n                ></button>\n              </div>\n            )}\n          </div>\n          <div className='professore'>\n            <img\n              src='https://media.pokemoncentral.it/wiki/e/ed/Masters_Professor_Oak.png'\n              alt=''\n            />\n            <div className='dialogo'>\n              <span className='professor-intro'>{dialogText}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Homepage;\n"],"mappings":";;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,SAAS,QAAQ,gBAAgB,CAAC,CAAC;AAC5C,OAAOC,iBAAiB,MAAM,aAAa,CAAC,CAAC;AAC7C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,GAAG,GAAG,oCAAoC;EAEhD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}