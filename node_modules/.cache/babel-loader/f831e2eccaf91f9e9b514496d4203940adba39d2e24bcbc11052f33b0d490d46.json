{"ast":null,"code":"var _jsxFileName = \"/Users/andreamanna/Desktop/Pokemon/fe/src/components/pages/Homepage.jsx\",\n  _s = $RefreshSig$();\n/** @format */\n\n// import React, { useState } from 'react';\n// import './homepage.css';\n\n// const Homepage = () => {\n//   const URL = 'https://pokeapi.co/api/v2/pokemon/';\n//   const IdPokemon = {\n//     bug: '#26de81',\n//     dragon: '#ffeaa7',\n//     electric: '#fed330',\n//     fairy: '#FF0069',\n//     fighting: '#30336b',\n//     fire: '#f0932b',\n//     flying: '#81ecec',\n//     grass: '#00b894',\n//     ground: '#EFB549',\n//     ghost: '#a55eea',\n//     ice: '#74b9ff',\n//     normal: '#95afc0',\n//     poison: '#6c5ce7',\n//     psychic: '#a29bfe',\n//     rock: '#2d3436',\n//     water: '#0190FF',\n//   };\n//   const [pokemonData, setPokemonData] = useState([]);\n\n//   const getRandomPokemon = async () => {\n//     const randomPokemonData = [];\n//     const existingPokemonIds = new Set();\n\n//     while (randomPokemonData.length < 6) {\n//       const id = Math.floor(Math.random() * 150) + 1;\n\n//       // Check if the Pokemon is not already in the array\n//       if (!existingPokemonIds.has(id)) {\n//         existingPokemonIds.add(id);\n\n//         const finalUrl = URL + id;\n\n//         try {\n//           const response = await fetch(finalUrl);\n//           const data = await response.json();\n//           randomPokemonData.push(data);\n//         } catch (error) {\n//           console.error('Errore nella richiesta API:', error);\n//         }\n//       }\n//     }\n\n//     setPokemonData(randomPokemonData);\n//   };\n\n//   const generateCard = (data, index) => {\n//     const hp = data.stats[0].base_stat;\n//     const imgSrc = data.sprites.other.dream_world.front_default;\n//     const pokeName = data.name[0].toUpperCase() + data.name.slice(1);\n//     const statAttack = data.stats[1].base_stat;\n//     const statDefense = data.stats[2].base_stat;\n//     const statSpeed = data.stats[5].base_stat;\n//     const themeColor = IdPokemon[data.types[0].type.name];\n\n//     return (\n//       <div\n//         key={index}\n//         className='card card-circle'\n//         style={{ backgroundColor: themeColor }}>\n//         <div className='pokemon-info'>\n//           <img\n//             src={imgSrc}\n//             alt={pokeName}\n//           />\n//           <p>{pokeName}</p>\n//         </div>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <>\n//       <div className='container'>\n//         <div className='team'>\n//           {pokemonData.map((pokemon, index) => generateCard(pokemon, index))}\n//         </div>\n//         <div className='professore'>\n//           <img\n//             src='https://media.pokemoncentral.it/wiki/e/ed/Masters_Professor_Oak.png'\n//             alt=''\n//           />\n//         </div>\n//       </div>\n//       <div>\n//         <button onClick={getRandomPokemon}>Crea Squadra</button>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Homepage;\nimport React, { useState } from 'react';\nimport './homepage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Homepage = () => {\n  _s();\n  const URL = 'https://pokeapi.co/api/v2/pokemon/';\n  const IdPokemon = {\n    bug: '#26de81',\n    dragon: '#ffeaa7',\n    electric: '#fed330',\n    fairy: '#FF0069',\n    fighting: '#30336b',\n    fire: '#f0932b',\n    flying: '#81ecec',\n    grass: '#00b894',\n    ground: '#EFB549',\n    ghost: '#a55eea',\n    ice: '#74b9ff',\n    normal: '#95afc0',\n    poison: '#6c5ce7',\n    psychic: '#a29bfe',\n    rock: '#2d3436',\n    water: '#0190FF'\n  };\n  const [pokemonData, setPokemonData] = useState([]);\n  const getRandomPokemon = async () => {\n    const randomPokemonData = [];\n    const existingPokemonIds = new Set();\n    while (randomPokemonData.length < 6) {\n      const id = Math.floor(Math.random() * 150) + 1;\n\n      // Check if the Pokemon is not already in the array\n      if (!existingPokemonIds.has(id)) {\n        existingPokemonIds.add(id);\n        const finalUrl = URL + id;\n        try {\n          const response = await fetch(finalUrl);\n          const data = await response.json();\n          randomPokemonData.push(data);\n        } catch (error) {\n          console.error('Errore nella richiesta API:', error);\n        }\n      }\n    }\n    setPokemonData(randomPokemonData);\n  };\n  const generateCard = (data, index) => {\n    const hp = data.stats[0].base_stat;\n    const imgSrc = data.sprites.other.dream_world.front_default;\n    const pokeName = data.name[0].toUpperCase() + data.name.slice(1);\n    const statAttack = data.stats[1].base_stat;\n    const statDefense = data.stats[2].base_stat;\n    const statSpeed = data.stats[5].base_stat;\n    const themeColor = IdPokemon[data.types[0].type.name];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-circle\",\n      style: {\n        backgroundColor: themeColor\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgSrc,\n          alt: pokeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pokeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team\",\n        children: pokemonData.map((pokemon, index) => generateCard(pokemon, index))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"professore\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.pokemoncentral.it/wiki/e/ed/Masters_Professor_Oak.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getRandomPokemon,\n          children: \"Crea Squadra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Homepage, \"KJVbKhp/rQ5Zj3NYVWPteLZDY/o=\");\n_c = Homepage;\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Homepage","_s","URL","IdPokemon","bug","dragon","electric","fairy","fighting","fire","flying","grass","ground","ghost","ice","normal","poison","psychic","rock","water","pokemonData","setPokemonData","getRandomPokemon","randomPokemonData","existingPokemonIds","Set","length","id","Math","floor","random","has","add","finalUrl","response","fetch","data","json","push","error","console","generateCard","index","hp","stats","base_stat","imgSrc","sprites","other","dream_world","front_default","pokeName","name","toUpperCase","slice","statAttack","statDefense","statSpeed","themeColor","types","type","className","style","backgroundColor","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","pokemon","onClick","_c","$RefreshReg$"],"sources":["/Users/andreamanna/Desktop/Pokemon/fe/src/components/pages/Homepage.jsx"],"sourcesContent":["/** @format */\n\n// import React, { useState } from 'react';\n// import './homepage.css';\n\n// const Homepage = () => {\n//   const URL = 'https://pokeapi.co/api/v2/pokemon/';\n//   const IdPokemon = {\n//     bug: '#26de81',\n//     dragon: '#ffeaa7',\n//     electric: '#fed330',\n//     fairy: '#FF0069',\n//     fighting: '#30336b',\n//     fire: '#f0932b',\n//     flying: '#81ecec',\n//     grass: '#00b894',\n//     ground: '#EFB549',\n//     ghost: '#a55eea',\n//     ice: '#74b9ff',\n//     normal: '#95afc0',\n//     poison: '#6c5ce7',\n//     psychic: '#a29bfe',\n//     rock: '#2d3436',\n//     water: '#0190FF',\n//   };\n//   const [pokemonData, setPokemonData] = useState([]);\n\n//   const getRandomPokemon = async () => {\n//     const randomPokemonData = [];\n//     const existingPokemonIds = new Set();\n\n//     while (randomPokemonData.length < 6) {\n//       const id = Math.floor(Math.random() * 150) + 1;\n\n//       // Check if the Pokemon is not already in the array\n//       if (!existingPokemonIds.has(id)) {\n//         existingPokemonIds.add(id);\n\n//         const finalUrl = URL + id;\n\n//         try {\n//           const response = await fetch(finalUrl);\n//           const data = await response.json();\n//           randomPokemonData.push(data);\n//         } catch (error) {\n//           console.error('Errore nella richiesta API:', error);\n//         }\n//       }\n//     }\n\n//     setPokemonData(randomPokemonData);\n//   };\n\n//   const generateCard = (data, index) => {\n//     const hp = data.stats[0].base_stat;\n//     const imgSrc = data.sprites.other.dream_world.front_default;\n//     const pokeName = data.name[0].toUpperCase() + data.name.slice(1);\n//     const statAttack = data.stats[1].base_stat;\n//     const statDefense = data.stats[2].base_stat;\n//     const statSpeed = data.stats[5].base_stat;\n//     const themeColor = IdPokemon[data.types[0].type.name];\n\n//     return (\n//       <div\n//         key={index}\n//         className='card card-circle'\n//         style={{ backgroundColor: themeColor }}>\n//         <div className='pokemon-info'>\n//           <img\n//             src={imgSrc}\n//             alt={pokeName}\n//           />\n//           <p>{pokeName}</p>\n//         </div>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <>\n//       <div className='container'>\n//         <div className='team'>\n//           {pokemonData.map((pokemon, index) => generateCard(pokemon, index))}\n//         </div>\n//         <div className='professore'>\n//           <img\n//             src='https://media.pokemoncentral.it/wiki/e/ed/Masters_Professor_Oak.png'\n//             alt=''\n//           />\n//         </div>\n//       </div>\n//       <div>\n//         <button onClick={getRandomPokemon}>Crea Squadra</button>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Homepage;\nimport React, { useState } from 'react';\nimport './homepage.css';\n\nconst Homepage = () => {\n  const URL = 'https://pokeapi.co/api/v2/pokemon/';\n  const IdPokemon = {\n    bug: '#26de81',\n    dragon: '#ffeaa7',\n    electric: '#fed330',\n    fairy: '#FF0069',\n    fighting: '#30336b',\n    fire: '#f0932b',\n    flying: '#81ecec',\n    grass: '#00b894',\n    ground: '#EFB549',\n    ghost: '#a55eea',\n    ice: '#74b9ff',\n    normal: '#95afc0',\n    poison: '#6c5ce7',\n    psychic: '#a29bfe',\n    rock: '#2d3436',\n    water: '#0190FF',\n  };\n  const [pokemonData, setPokemonData] = useState([]);\n\n  const getRandomPokemon = async () => {\n    const randomPokemonData = [];\n    const existingPokemonIds = new Set();\n\n    while (randomPokemonData.length < 6) {\n      const id = Math.floor(Math.random() * 150) + 1;\n\n      // Check if the Pokemon is not already in the array\n      if (!existingPokemonIds.has(id)) {\n        existingPokemonIds.add(id);\n\n        const finalUrl = URL + id;\n\n        try {\n          const response = await fetch(finalUrl);\n          const data = await response.json();\n          randomPokemonData.push(data);\n        } catch (error) {\n          console.error('Errore nella richiesta API:', error);\n        }\n      }\n    }\n\n    setPokemonData(randomPokemonData);\n  };\n\n  const generateCard = (data, index) => {\n    const hp = data.stats[0].base_stat;\n    const imgSrc = data.sprites.other.dream_world.front_default;\n    const pokeName = data.name[0].toUpperCase() + data.name.slice(1);\n    const statAttack = data.stats[1].base_stat;\n    const statDefense = data.stats[2].base_stat;\n    const statSpeed = data.stats[5].base_stat;\n    const themeColor = IdPokemon[data.types[0].type.name];\n\n    return (\n      <div\n        key={index}\n        className='card-circle'\n        style={{ backgroundColor: themeColor }}>\n        <div className='pokemon-info'>\n          <img\n            src={imgSrc}\n            alt={pokeName}\n          />\n          <p>{pokeName}</p>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className='container'>\n        <div className='team'>\n          {pokemonData.map((pokemon, index) => generateCard(pokemon, index))}\n        </div>\n        <div className='professore'>\n          <img\n            src='https://media.pokemoncentral.it/wiki/e/ed/Masters_Professor_Oak.png'\n            alt=''\n          />\n        </div>\n        <div>\n          <button onClick={getRandomPokemon}>Crea Squadra</button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Homepage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}